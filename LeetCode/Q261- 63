https://leetcode.com/problems/unique-paths-ii/description/?envType=study-plan-v2&envId=top-interview-150


class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        
        // Agar starting point pe obstacle hai to koi rasta nahi hoga
        if (obstacleGrid[0][0] == 1) {
            return 0;
        }
        
        // Starting point ko 1 se initialize kar diya (ek hi tareeka hai yahan aane ka)
        obstacleGrid[0][0] = 1;
        
        // First column fill kar rahe hain
        for (int i = 1; i < m; i++) {
            obstacleGrid[i][0] = (obstacleGrid[i][0] == 0 && obstacleGrid[i - 1][0] == 1) ? 1 : 0;
        }
        
        // First row fill kar rahe hain
        for (int j = 1; j < n; j++) {
            obstacleGrid[0][j] = (obstacleGrid[0][j] == 0 && obstacleGrid[0][j - 1] == 1) ? 1 : 0;
        }
        
        // Baaki grid fill karte hain
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (obstacleGrid[i][j] == 0) {
                    obstacleGrid[i][j] = obstacleGrid[i - 1][j] + obstacleGrid[i][j - 1];
                } else {
                    obstacleGrid[i][j] = 0; // Obstacle hai toh koi rasta nahi
                }
            }
        }
        
        return obstacleGrid[m - 1][n - 1];  // Last cell me answer hoga
    }
}
