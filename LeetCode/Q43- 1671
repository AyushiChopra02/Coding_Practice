https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array/description/?envType=daily-question&envId=2024-10-30

class Solution {
    public int minimumMountainRemovals(int[] nums) {
        int n = nums.length;

        int[] lis = new int[n];
        int[] lds = new int[n];
        
        for (int i = 0; i < n; i++) {
            lis[i] = 1;
            for (int j = 0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    lis[i] = Math.max(lis[i], lis[j] + 1);
                }
            }
        }
        
        for (int i = n - 1; i >= 0; i--) {
            lds[i] = 1;
            for (int j = n - 1; j > i; j--) {
                if (nums[j] < nums[i]) {
                    lds[i] = Math.max(lds[i], lds[j] + 1);
                }
            }
        }
        
        int maxMountainLength = 0;
        for (int i = 1; i < n - 1; i++) { 
            if (lis[i] > 1 && lds[i] > 1) { 
                maxMountainLength = Math.max(maxMountainLength, lis[i] + lds[i] - 1);
            }
        }
        
    
        return n - maxMountainLength;
    }
}
