https://leetcode.com/problems/make-lexicographically-smallest-array-by-swapping-elements/description/?envType=daily-question&envId=2025-01-25


import java.util.*;

public class Solution {
    public int[] lexicographicallySmallestArray(int[] nums, int limit) {
        int n = nums.length;
        List<int[]> indexedNums = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            indexedNums.add(new int[]{nums[i], i});
        }  
        indexedNums.sort(Comparator.comparingInt(a -> a[0])); 
        int[] result = new int[n];
        boolean[] visited = new boolean[n]; 
        for (int i = 0; i < n; i++) {
            if (visited[i]) continue; 
               List<Integer> group = new ArrayList<>();
            int j = i;
            while (j < n && (j == i || Math.abs(indexedNums.get(j)[0] - indexedNums.get(j - 1)[0]) <= limit)) {
                group.add(indexedNums.get(j)[1]); 
                visited[j] = true;
                j++;
            }   
            Collections.sort(group);
            List<Integer> values = new ArrayList<>();
            for (int index : group) {
                values.add(nums[index]);
            }
            Collections.sort(values);     
            for (int k = 0; k < group.size(); k++) {
                result[group.get(k)] = values.get(k);
            }
        }
        return result;
    }
}
