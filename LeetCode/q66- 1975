https://leetcode.com/problems/maximum-matrix-sum/description/?envType=daily-question&envId=2024-11-24


class Solution {
    public long maxMatrixSum(int[][] matrix) {
        int n = matrix.length;
        long sum = 0; // Use long to handle large numbers
        int minAbsValue = Integer.MAX_VALUE; // Track the smallest absolute value
        int negativeCount = 0; // Count the number of negative elements

        // Traverse the matrix
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int value = matrix[i][j];
                sum += Math.abs(value); // Add absolute value to the sum
                minAbsValue = Math.min(minAbsValue, Math.abs(value)); // Track the smallest absolute value
                if (value < 0) {
                    negativeCount++; // Count negatives
                }
            }
        }

        // If the count of negatives is odd, subtract twice the smallest absolute value
        if (negativeCount % 2 != 0) {
            sum -= 2L * minAbsValue; // Subtract twice the smallest absolute value
        }

        return sum;
    }
}
