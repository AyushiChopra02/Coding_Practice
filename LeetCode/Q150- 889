https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/description/?envType=daily-question&envId=2025-02-23



class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode(int x) { val = x; }
}

public class Solution {
    public TreeNode constructFromPrePost(int[] preorder, int[] postorder) {
        int n = preorder.length;
        return build(preorder, postorder, 0, n - 1, 0, n - 1);
    }
    
    private TreeNode build(int[] preorder, int[] postorder, int preStart, int preEnd, int postStart, int postEnd) {
        if (preStart > preEnd || postStart > postEnd)
            return null;
        
        TreeNode root = new TreeNode(preorder[preStart]);
        if (preStart == preEnd)
            return root;
        
        int index = postStart;
        while (postorder[index] != preorder[preStart + 1])
            index++;
        
        int leftSize = index - postStart + 1;
        root.left = build(preorder, postorder, preStart + 1, preStart + leftSize, postStart, index);
        root.right = build(preorder, postorder, preStart + leftSize + 1, preEnd, index + 1, postEnd - 1);
        
        return root;
    }
}
