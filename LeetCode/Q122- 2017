https://leetcode.com/problems/grid-game/description/?envType=daily-question&envId=2025-01-21

  
class Solution { 
    public long gridGame(int[][] grid) {
        int n = grid[0].length;

        long[] topPrefixSum = new long[n];
        long[] bottomPrefixSum = new long[n];

        topPrefixSum[0] = grid[0][0];
        bottomPrefixSum[0] = grid[1][0];

        for (int i = 1; i < n; i++) {
            topPrefixSum[i] = topPrefixSum[i - 1] + grid[0][i];
            bottomPrefixSum[i] = bottomPrefixSum[i - 1] + grid[1][i];
        }

        long minSecondRobotScore = Long.MAX_VALUE;

        for (int i = 0; i < n; i++) {
            
            long scoreFromTop = i < n - 1 ? topPrefixSum[n - 1] - topPrefixSum[i] : 0;
            long scoreFromBottom = i > 0 ? bottomPrefixSum[i - 1] : 0;

            long secondRobotScore = Math.max(scoreFromTop, scoreFromBottom);

            minSecondRobotScore = Math.min(minSecondRobotScore, secondRobotScore);
        }

        return minSecondRobotScore;
    }
}
